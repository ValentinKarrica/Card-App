{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport assets_data from \"../data/assets.json\";\nimport traits_data from \"../data/traits.json\";\nvar traits = traits_data.traits;\nvar assets = assets_data.assets;\nvar pageSlice = createSlice({\n  name: 'Pages',\n  initialState: {\n    charackerList: [],\n    pageList: [],\n    getSuccess: false,\n    flipCard: true,\n    rowNum: 4,\n    cardNum: 5,\n    pageNum: {\n      NumberOfPage: 1,\n      pageNumHadler: 0\n    }\n  },\n  reducers: {\n    createList: function createList(state, action) {\n      var limit = assets.length;\n\n      var _loop = function _loop(_i) {\n        traits.forEach(function (item) {\n          if (item.id === assets[_i].id) {\n            var element = {\n              card_element: assets[_i]\n            };\n            var newElement = Object.assign(item, element);\n            item = newElement;\n          }\n        });\n      };\n\n      for (var _i = 0; _i < limit; _i += 1) {\n        _loop(_i);\n      } // MY NUMBER\n\n\n      var myNumber = 0;\n      traits.forEach(function (item) {\n        myNumber = myNumber + 1;\n        var element = {\n          my_number: myNumber\n        };\n        var newElement = Object.assign(item, element);\n        item = newElement;\n      });\n      state.charackerList = traits;\n      var size = state.cardNum;\n      var limit2 = state.charackerList.length;\n\n      for (var i = 0; i < limit2; i += size) {\n        state.pageList.push(state.charackerList.slice(i, i + size));\n      }\n\n      state.getSuccess = true;\n    },\n    onHoandlerCardNum: function onHoandlerCardNum(state, action) {\n      console.log(action.payload);\n      state.cardNum = Number(action.payload);\n      state.charackerList = traits;\n      var size = Number(action.payload);\n      var limit3 = state.charackerList.length;\n      state.pageList = [];\n\n      for (var i = 0; i < limit3; i += size) {\n        state.pageList.push(state.charackerList.slice(i, i + size));\n      }\n    },\n    flipCardHandler: function flipCardHandler(state, action) {\n      state.flipCard = !state.flipCard;\n    },\n    onHandlerRowNum: function onHandlerRowNum(state, action) {\n      state.rowNum = Number(action.payload);\n    }\n  }\n});\nexport var pageActions = pageSlice.actions;\nexport default pageSlice;","map":{"version":3,"sources":["C:/Users/ΒΑΛΕΝΤΙΝΟ/Desktop/Developer/CarEx/src/store/page-slice.js"],"names":["createSlice","assets_data","traits_data","traits","assets","pageSlice","name","initialState","charackerList","pageList","getSuccess","flipCard","rowNum","cardNum","pageNum","NumberOfPage","pageNumHadler","reducers","createList","state","action","limit","length","i","forEach","item","id","element","card_element","newElement","Object","assign","myNumber","my_number","size","limit2","push","slice","onHoandlerCardNum","console","log","payload","Number","limit3","flipCardHandler","onHandlerRowNum","pageActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport assets_data from \"../data/assets.json\";\r\nimport traits_data from \"../data/traits.json\";\r\n\r\nconst traits = traits_data.traits\r\nconst assets = assets_data.assets\r\n\r\nconst pageSlice = createSlice({\r\n    name: 'Pages',\r\n    initialState: {\r\n        charackerList: [],\r\n        pageList: [],\r\n        getSuccess: false,\r\n        flipCard: true,\r\n        rowNum: 4,\r\n        cardNum: 5,\r\n        pageNum : {\r\n            NumberOfPage: 1,\r\n            pageNumHadler: 0,\r\n            \r\n        },\r\n    },\r\n    reducers: {\r\n        \r\n        createList(state, action){\r\n            const limit = assets.length\r\n            for (let i=0; i<limit; i+=1){\r\n                traits.forEach(item=> {\r\n                    if (item.id=== assets[i].id){\r\n                        let element ={card_element: assets[i]}\r\n                        let newElement = Object.assign(item,element)\r\n                        item = newElement;\r\n                        }\r\n                  })\r\n            }\r\n            // MY NUMBER\r\n            let myNumber = 0\r\n            traits.forEach(item=> {\r\n                    myNumber= myNumber+1\r\n                    let element ={my_number: myNumber}\r\n                    let newElement = Object.assign(item,element)\r\n                    item = newElement;\r\n                    }\r\n            )\r\n            \r\n            state.charackerList = traits;\r\n\r\n            let size = state.cardNum; \r\n            const limit2 = state.charackerList.length\r\n            for (var i=0; i<limit2; i+=size) {\r\n                state.pageList.push(state.charackerList.slice(i,i+size));\r\n            }\r\n            \r\n            state.getSuccess = true;\r\n        },\r\n\r\n        onHoandlerCardNum(state, action){\r\n            console.log(action.payload)\r\n            state.cardNum = Number(action.payload);\r\n            state.charackerList = traits;\r\n\r\n            let size = Number(action.payload); \r\n            const limit3 = state.charackerList.length\r\n            state.pageList = [];\r\n            for (var i=0; i<limit3; i+=size) {\r\n                state.pageList.push(state.charackerList.slice(i,i+size));\r\n            }\r\n\r\n\r\n        },\r\n\r\n\r\n        flipCardHandler(state,action){\r\n            state.flipCard=!state.flipCard\r\n        },\r\n        onHandlerRowNum (state, action){\r\n            state.rowNum = Number(action.payload);\r\n        }\r\n    }\r\n})\r\n\r\nexport const pageActions = pageSlice.actions;\r\nexport default pageSlice;"]},"metadata":{},"sourceType":"module"}