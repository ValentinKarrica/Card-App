{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport assets_data from \"../data/assets.json\";\nimport traits_data from \"../data/traits.json\";\nvar traits = traits_data.traits;\nvar assets = assets_data.assets;\nvar pageSlice = createSlice({\n  name: 'Pages',\n  initialState: {\n    charackerList: [],\n    pageList: [],\n    getSuccess: false,\n    flipCard: true,\n    rowNum: 4,\n    cardNum: 5,\n    lastPage: 1,\n    pageNum: {\n      pageNumHadler: 0,\n      pageNumCounter: 1,\n      pageNumBeforeOne: 0,\n      pageNumBeforeTwo: -1,\n      pageNumAfterOne: 2,\n      pageNumAfterTwo: 3\n    }\n  },\n  reducers: {\n    onHadlerPageNum: function onHadlerPageNum(state, action) {\n      if (action.payload === 'NEXT') {\n        if (state.pageNum.pageNumCounter < state.lastPage) {\n          state.pageNum.pageNumCounter += 1;\n          state.pageNum.pageNumBeforeOne += 1;\n          state.pageNum.pageNumBeforeTwo += 1;\n          state.pageNum.pageNumAfterOne += 1;\n          state.pageNum.pageNumAfterTwo += 1;\n          state.pageNum.pageNumHadler += state.rowNum;\n        }\n      } else if (action.payload === \"PREVIOUS\") {\n        if (state.pageNum.pageNumCounter > 1) {\n          state.pageNum.pageNumCounter -= 1;\n          state.pageNum.pageNumBeforeOne -= 1;\n          state.pageNum.pageNumBeforeTwo -= 1;\n          state.pageNum.pageNumAfterOne -= 1;\n          state.pageNum.pageNumAfterTwo -= 1;\n          state.pageNum.pageNumHadler -= state.rowNum;\n        }\n      } else if (action.payload === \"LAST\") {\n        state.pageNum.pageNumHadler = state.pageList.length - state.rowNum;\n        state.pageNum.pageNumCounter = state.lastPage;\n        state.pageNum.pageNumBeforeOne = state.pageNum.pageNumCounter - 1;\n        state.pageNum.pageNumBeforeTwo = state.pageNum.pageNumCounter - 2;\n        state.pageNum.pageNumAfterOne = state.pageNum.pageNumCounter + 1;\n        state.pageNum.pageNumAfterTwo = state.pageNum.pageNumCounter + 2;\n      } else if (action.payload === \"FIRST\") {}\n\n      if (action.payload === \"\") {}\n\n      if (action.payload === \"\") {}\n    },\n    createList: function createList(state, action) {\n      var limit = assets.length;\n\n      var _loop = function _loop(_i) {\n        traits.forEach(function (item) {\n          if (item.id === assets[_i].id) {\n            var element = {\n              card_element: assets[_i]\n            };\n            var newElement = Object.assign(item, element);\n            item = newElement;\n          }\n        });\n      };\n\n      for (var _i = 0; _i < limit; _i += 1) {\n        _loop(_i);\n      } // MY NUMBER\n\n\n      var myNumber = 0;\n      traits.forEach(function (item) {\n        myNumber = myNumber + 1;\n        var element = {\n          my_number: myNumber\n        };\n        var newElement = Object.assign(item, element);\n        item = newElement;\n      });\n      state.charackerList = traits;\n      var size = state.cardNum;\n      var limit2 = state.charackerList.length;\n\n      for (var i = 0; i < limit2; i += size) {\n        state.pageList.push(state.charackerList.slice(i, i + size));\n      }\n\n      state.getSuccess = true;\n      state.lastPage = (state.pageList.length - state.rowNum) / state.rowNum + 1;\n    },\n    onHoandlerCardNum: function onHoandlerCardNum(state, action) {\n      console.log(action.payload);\n      state.cardNum = Number(action.payload);\n      state.charackerList = traits;\n      var size = Number(action.payload);\n      var limit3 = state.charackerList.length;\n      state.pageList = [];\n\n      for (var i = 0; i < limit3; i += size) {\n        state.pageList.push(state.charackerList.slice(i, i + size));\n      }\n\n      state.lastPage = (state.pageList.length - state.rowNum) / state.rowNum + 1;\n    },\n    flipCardHandler: function flipCardHandler(state, action) {\n      state.flipCard = !state.flipCard;\n    },\n    onHandlerRowNum: function onHandlerRowNum(state, action) {\n      state.rowNum = Number(action.payload);\n      state.lastPage = (state.pageList.length - state.rowNum) / state.rowNum + 1;\n    }\n  }\n});\nexport var pageActions = pageSlice.actions;\nexport default pageSlice;","map":{"version":3,"sources":["C:/Users/ΒΑΛΕΝΤΙΝΟ/Desktop/Developer/CarEx/src/store/page-slice.js"],"names":["createSlice","assets_data","traits_data","traits","assets","pageSlice","name","initialState","charackerList","pageList","getSuccess","flipCard","rowNum","cardNum","lastPage","pageNum","pageNumHadler","pageNumCounter","pageNumBeforeOne","pageNumBeforeTwo","pageNumAfterOne","pageNumAfterTwo","reducers","onHadlerPageNum","state","action","payload","length","createList","limit","i","forEach","item","id","element","card_element","newElement","Object","assign","myNumber","my_number","size","limit2","push","slice","onHoandlerCardNum","console","log","Number","limit3","flipCardHandler","onHandlerRowNum","pageActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport assets_data from \"../data/assets.json\";\r\nimport traits_data from \"../data/traits.json\";\r\n\r\nconst traits = traits_data.traits\r\nconst assets = assets_data.assets\r\n\r\nconst pageSlice = createSlice({\r\n    name: 'Pages',\r\n    initialState: {\r\n        charackerList: [],\r\n        pageList: [],\r\n        getSuccess: false,\r\n        flipCard: true,\r\n        rowNum: 4,\r\n        cardNum: 5,\r\n        lastPage: 1,\r\n        pageNum : {\r\n            pageNumHadler: 0,\r\n            pageNumCounter: 1,\r\n            pageNumBeforeOne: 0,\r\n            pageNumBeforeTwo: -1,\r\n            pageNumAfterOne: 2,\r\n            pageNumAfterTwo: 3,\r\n        },\r\n    },\r\n    reducers: {\r\n        onHadlerPageNum(state, action){\r\n            if (action.payload==='NEXT'){\r\n                if(state.pageNum.pageNumCounter < state.lastPage){\r\n                    state.pageNum.pageNumCounter += 1;\r\n                    state.pageNum.pageNumBeforeOne += 1;\r\n                    state.pageNum.pageNumBeforeTwo += 1;\r\n                    state.pageNum.pageNumAfterOne += 1;\r\n                    state.pageNum.pageNumAfterTwo += 1;\r\n                    state.pageNum.pageNumHadler += state.rowNum;\r\n                }\r\n            }\r\n            else if (action.payload===\"PREVIOUS\"){\r\n                if(state.pageNum.pageNumCounter>1){\r\n                    state.pageNum.pageNumCounter -= 1;\r\n                    state.pageNum.pageNumBeforeOne -= 1;\r\n                    state.pageNum.pageNumBeforeTwo -= 1;\r\n                    state.pageNum.pageNumAfterOne -= 1;\r\n                    state.pageNum.pageNumAfterTwo -= 1;\r\n                    state.pageNum.pageNumHadler -= state.rowNum;\r\n                }\r\n            }\r\n            else if (action.payload===\"LAST\"){\r\n                state.pageNum.pageNumHadler = state.pageList.length - state.rowNum;\r\n                state.pageNum.pageNumCounter = state.lastPage;\r\n                state.pageNum.pageNumBeforeOne = state.pageNum.pageNumCounter-1;\r\n                state.pageNum.pageNumBeforeTwo =state.pageNum.pageNumCounter-2;\r\n                state.pageNum.pageNumAfterOne =state.pageNum.pageNumCounter + 1;\r\n                state.pageNum.pageNumAfterTwo =state.pageNum.pageNumCounter +2;\r\n            }\r\n            else if (action.payload===\"FIRST\"){}\r\n            if (action.payload===\"\"){}\r\n            if (action.payload===\"\"){}\r\n        },\r\n        \r\n        createList(state, action){\r\n            const limit = assets.length\r\n            for (let i=0; i<limit; i+=1){\r\n                traits.forEach(item=> {\r\n                    if (item.id=== assets[i].id){\r\n                        let element ={card_element: assets[i]}\r\n                        let newElement = Object.assign(item,element)\r\n                        item = newElement;\r\n                        }\r\n                  })\r\n            }\r\n            // MY NUMBER\r\n            let myNumber = 0\r\n            traits.forEach(item=> {\r\n                    myNumber= myNumber+1\r\n                    let element ={my_number: myNumber}\r\n                    let newElement = Object.assign(item,element)\r\n                    item = newElement;\r\n                    }\r\n            )\r\n            \r\n            state.charackerList = traits;\r\n\r\n            let size = state.cardNum; \r\n            const limit2 = state.charackerList.length\r\n            for (var i=0; i<limit2; i+=size) {\r\n                state.pageList.push(state.charackerList.slice(i,i+size));\r\n            }\r\n            \r\n            state.getSuccess = true;\r\n            state.lastPage = ((state.pageList.length - state.rowNum)/state.rowNum)+1;\r\n        },\r\n\r\n        onHoandlerCardNum(state, action){\r\n            console.log(action.payload)\r\n            state.cardNum = Number(action.payload);\r\n            state.charackerList = traits;\r\n\r\n            let size = Number(action.payload); \r\n            const limit3 = state.charackerList.length\r\n            state.pageList = [];\r\n            for (var i=0; i<limit3; i+=size) {\r\n                state.pageList.push(state.charackerList.slice(i,i+size));\r\n            }\r\n            state.lastPage = ((state.pageList.length - state.rowNum)/state.rowNum)+1;\r\n\r\n        },\r\n\r\n\r\n        flipCardHandler(state,action){\r\n            state.flipCard=!state.flipCard\r\n        },\r\n        onHandlerRowNum (state, action){\r\n            state.rowNum = Number(action.payload);\r\n            state.lastPage = ((state.pageList.length - state.rowNum)/state.rowNum)+1;\r\n        }\r\n    }\r\n})\r\n\r\nexport const pageActions = pageSlice.actions;\r\nexport default pageSlice;"]},"metadata":{},"sourceType":"module"}